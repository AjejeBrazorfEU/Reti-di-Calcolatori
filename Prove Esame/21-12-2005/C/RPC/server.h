/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SERVER_H_RPCGEN
#define _SERVER_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define DIM_NOME 50
#define NUM_UTENTI 10
#define NUM_STANZE 100

struct Utente {
	char nome[DIM_NOME];
};
typedef struct Utente Utente;

struct Stanza {
	char nomeStanza[DIM_NOME];
	char tipo[3];
	Utente utenti[NUM_UTENTI];
};
typedef struct Stanza Stanza;

struct Richiesta {
	char nomeStanza[DIM_NOME];
	char tipo[3];
};
typedef struct Richiesta Richiesta;

struct Risultato {
	Stanza stanze[NUM_STANZE];
	int res;
};
typedef struct Risultato Risultato;

#define ESAME 0x20000013
#define ESAMEVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define aggiungi_stanza 1
extern  int * aggiungi_stanza_1(Richiesta *, CLIENT *);
extern  int * aggiungi_stanza_1_svc(Richiesta *, struct svc_req *);
#define elimina_utente 2
extern  Risultato * elimina_utente_1(char **, CLIENT *);
extern  Risultato * elimina_utente_1_svc(char **, struct svc_req *);
#define visualizza_stato 3
extern  char ** visualizza_stato_1(void *, CLIENT *);
extern  char ** visualizza_stato_1_svc(void *, struct svc_req *);
#define sospensione_stanza 4
extern  int * sospensione_stanza_1(char **, CLIENT *);
extern  int * sospensione_stanza_1_svc(char **, struct svc_req *);
extern int esame_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define aggiungi_stanza 1
extern  int * aggiungi_stanza_1();
extern  int * aggiungi_stanza_1_svc();
#define elimina_utente 2
extern  Risultato * elimina_utente_1();
extern  Risultato * elimina_utente_1_svc();
#define visualizza_stato 3
extern  char ** visualizza_stato_1();
extern  char ** visualizza_stato_1_svc();
#define sospensione_stanza 4
extern  int * sospensione_stanza_1();
extern  int * sospensione_stanza_1_svc();
extern int esame_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Utente (XDR *, Utente*);
extern  bool_t xdr_Stanza (XDR *, Stanza*);
extern  bool_t xdr_Richiesta (XDR *, Richiesta*);
extern  bool_t xdr_Risultato (XDR *, Risultato*);

#else /* K&R C */
extern bool_t xdr_Utente ();
extern bool_t xdr_Stanza ();
extern bool_t xdr_Richiesta ();
extern bool_t xdr_Risultato ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SERVER_H_RPCGEN */
